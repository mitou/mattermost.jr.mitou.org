name: Upgrade Mattermost Image

on:
    workflow_dispatch:

jobs:
    upgrade-image:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get latest Mattermost release version
              id: get-latest-image
              run: |
                # Fetch the latest Mattermost release URL
                LATEST_RELEASE_URL=$(curl -s https://releases.mattermost.com/ | grep -o 'https://releases.mattermost.com/[0-9.]*/mattermost-enterprise-[0-9.]*-linux-amd64.tar.gz' | head -1)

                # Extract the version number from the URL
                LATEST_VERSION=$(echo $LATEST_RELEASE_URL | grep -o '/[0-9.]*/' | sed 's/\///g')

                # Set output for use in subsequent steps
                TRUNCATED_VERSION=$(echo $LATEST_VERSION | sed -E 's/^([0-9]+\.[0-9]+)\.[0-9]+$/\1/')

                echo "Latest Mattermost release: $LATEST_VERSION (using version: $TRUNCATED_VERSION)"
                echo "latest_version=$TRUNCATED_VERSION" >> $GITHUB_OUTPUT
            
            - name: Get current Mattermost version
              id: get-current-image
              run: |
                # Extract the current image version from the Kubernetes manifest
                CURRENT_IMAGE=$(grep -o "mattermost/mattermost-enterprise-edition:.*" kubernetes/mattermost/mattermost.yml | head -1 | cut -d':' -f2)

                echo "Current Mattermost image version: $CURRENT_IMAGE"
                echo "current_version=$CURRENT_IMAGE" >> $GITHUB_OUTPUT
            
            - name: Compare versions and update image
              id: compare-versions
              run: |
                # Compare the current and latest versions
                if [ "${{ steps.get-latest-image.outputs.latest_version }}" != "${{ steps.get-current-image.outputs.current_version }}" ]; then
                    echo "Versions differ. Updating image to ${{ steps.get-latest-image.outputs.latest_version }}"
                    sed -i "s/mattermost\/mattermost-enterprise-edition:[^ ]*/mattermost\/mattermost-enterprise-edition:release-${{ steps.get-latest-image.outputs.latest_version }}/" kubernetes/mattermost/mattermost.yml
                    echo "updated=true" >> $GITHUB_OUTPUT
                else
                    echo "Versions are the same. No update needed."
                    echo "updated=false" >> $GITHUB_OUTPUT
                fi
            
            - name: Create Pull Request
              if: steps.compare-versions.outputs.updated == 'true'
              uses: peter-evans/create-pull-request@v7
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                commit-message: "Update Mattermost image to ${{ steps.get-latest-image.outputs.latest_version }}"
                title: "Update Mattermost image to ${{ steps.get-latest-image.outputs.latest_version }}"
                body: |
                    This PR updates the Mattermost image to version ${{ steps.get-latest-image.outputs.latest_version }}.
                    
                    Automated change by the Upgrade workflow.
                branch: update-mattermost-image-${{ steps.get-latest-image.outputs.latest_version }}
                base: master
                delete-branch: true
                reviewers: kyasbal