apiVersion: apps/v1
kind: Deployment
metadata:
  name: mattermost
  namespace: mattermost
  labels:
    app: mattermost
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 1
  selector:
    matchLabels:
      app: mattermost
  template:
    metadata:
      labels:
        app: mattermost
    spec:
      securityContext: 
        fsGroup: 2000
      serviceAccountName: mattermost-primary
      readinessGates:
      - conditionType: bleve-ready
      initContainers:
        - name: secret-placer
          image: busybox
          command: ["/bin/sh","-c"]
          args:
            - cp /secret/config.json /config/config.json
              && chown 2000:2000 /config/config.json
          volumeMounts:
            - name: config
              mountPath: /config
            - name: secret
              mountPath: /secret
      containers:
      - name: mattermost
        image: mattermost/mattermost-team-edition:release-9.6
        imagePullPolicy: Always
        env:
          - name: MATTERMOST_TOKEN
            valueFrom:
              secretKeyRef:
                name: gcp-secret-env
                key: MATTERMOST_TOKEN
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
            ephemeral-storage: 4096Mi
          requests:
            cpu: 500m
            memory: 2Gi
            ephemeral-storage: 4096Mi
        lifecycle:
          postStart:
            exec:
              command: [
                "/usr/bin/bash",
                "-c",
                '(max_retries=60; retry_delay=10; retries=0; result=1; while [[ $retries -lt $max_retries && $result -ne 0 ]]; do ((retries++)); echo "retry $retries/$max_retries..."; curl http://localhost:8000/api/v4/system/ping -s; result=$?; if [[ $result -ne 0 ]]; then echo "retry"; sleep $retry_delay; fi; done; if [[ $result -ne 0 ]]; then echo "startup timeout";exit 1;fi;echo "ping success"; response=$(curl -s -i -H "Authorization: Bearer $MATTERMOST_TOKEN" http://localhost:8000/api/v4/jobs -X POST -d ''{"type":"bleve_post_indexing"}'' | grep bleve_post_indexing);if [[ "$response" == "" ]]; then echo "failed to create job";echo "$response" exit 1;fi;echo "job created"; max_retries=864; retry_delay=10; retries=0; result=""; while [[ $retries -lt $max_retries && "$result" == "" ]]; do ((retries++)); echo "wait for index $retries/$max_retries..."; response=$(curl -s "http://localhost:8000/api/v4/jobs/type/bleve_post_indexing?page=0&per_page=1" -H "Authorization: Bearer $MATTERMOST_TOKEN" | grep success); result=$response; if [[ "$result" == "" ]]; then echo "index not completed"; sleep $retry_delay; fi; done; if [[ "$result" == "" ]]; then echo "index timeout"; exit 1;else echo "index success"; fi; curl -s https://kubernetes.default.svc/api/v1/namespaces/$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)/pods/$(hostname)/status -X PATCH -H "Content-Type: application/json-patch+json"  -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" -d ''[{"op": "add", "path": "/status/conditions/-", "value": {"type": "bleve-ready", "status": "True", "lastTransitionTime": "2018-10-16T06:59:45Z", "lastProbeTime": null}}]'' -k) > /var/tmp/post-start.log 2>&1'
              ]
        readinessProbe:
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 4
          httpGet:
            path:  /api/v4/system/ping
            port: http
        livenessProbe:
          initialDelaySeconds: 600
          timeoutSeconds: 5
          periodSeconds: 15
          failureThreshold: 4
          httpGet:
            path:  /api/v4/system/ping
            port: http
        startupProbe:
          httpGet:
            path:  /api/v4/system/ping
            port: http
          failureThreshold: 8640
          periodSeconds: 10
        volumeMounts:
          - name: config
            mountPath: /mattermost/config/
          - name: bleve
            mountPath: /mattermost/bleve/
          - name: data
            mountPath: /mattermost/data/
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          emptyDir: {}
        - name: bleve
          emptyDir:
            sizeLimit: 2Gi
        - name: secret
          secret:
            secretName: gcp-secret-config
